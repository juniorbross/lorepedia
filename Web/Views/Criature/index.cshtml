@using Services.Dtos
@{
    ViewData["Title"] = "Lista de Criaturas";
}
@model CriatureModels;

<!-- Fuentes mitológicas -->
<link href="https://fonts.googleapis.com/css2?family=Cinzel+Decorative&family=Uncial+Antiqua&display=swap" rel="stylesheet" />
<link href="~/css/index.css" rel="stylesheet" />

<!-- Título principal (haz clic y redirige a lista) -->
<h1 class="title-lorepedia" onclick="location.href='@Url.Action("Index", "Criature")'" title="Ir a la lista de criaturas">
    Lorepedia
</h1>

<!-- Contenedor búsqueda + filtro -->
<div class="filter-container">
    <input type="text" id="searchInput" placeholder="Buscar criatura por nombre..." autocomplete="off" />
    <div id="starFilter" title="Filtrar por nivel de peligro exacto">
        @for (int i = 1; i <= 5; i++)
        {
            <span class="filter-star" data-value="@i">&#9733;</span>
        }
    </div>
</div>

<!-- Lista de criaturas -->
@if (Model.Criatures.Count > 0)
{
    <div class="cards-row">
        @foreach (var criature in Model.Criatures)
        {
            <div class="card">
                <img src="@criature.ImagenUrl" alt="Imagen de @criature.Nombre" />
                <div class="card-body">
                    <h5 class="card-title">@criature.Nombre</h5>
                    <div>
                        <span class="rating-label">Nivel de Peligro:</span>
                        <span class="star-rating">
                            @for (int j = 1; j <= 5; j++)
                            {
                                if (j <= criature.niveldepeligro)
                                {
                                    <span>&#9733;</span>
                                }
                                else
                                {
                                    <span class="empty">&#9733;</span>
                                }
                            }
                        </span>
                    </div>
                    <div class="btn-group-magic">
                        <a href="@Url.Action("VerMas", "Criature", new { id = criature.Id })" class="btn-magic view">Ver Más</a>
                        <a href="@Url.Action("Edit", "Criature", new { id = criature.Id })" class="btn-magic edit">Editar</a>
                        <form action="@Url.Action("Delete", "Criature", new { id = criature.Id })" method="post" style="display:inline;">
                            <button type="submit" class="btn-magic delete" onclick="return confirm('¿Estás seguro de que deseas eliminar esta criatura?');">Eliminar</button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <h5>No hay criaturas registradas</h5>
}

<script>
    const searchInput = document.getElementById('searchInput');
    const starFilter = document.getElementById('starFilter');
    const filterStars = starFilter.querySelectorAll('.filter-star');
    let selectedStars = 0;

    function applyFilters() {
        const searchTerm = searchInput.value.toLowerCase();
        const cards = document.querySelectorAll('.card');

        cards.forEach(card => {
            const name = card.querySelector('.card-title').innerText.toLowerCase();
            const stars = card.querySelectorAll('.star-rating span:not(.empty)').length;

            const matchesName = name.includes(searchTerm);
            const matchesStars = selectedStars === 0 || stars === selectedStars;

            card.style.display = (matchesName && matchesStars) ? 'flex' : 'none';
        });
    }

    searchInput.addEventListener('input', applyFilters);

    filterStars.forEach(star => {
        star.addEventListener('click', function () {
            const clickedValue = parseInt(this.getAttribute('data-value'));
            selectedStars = (selectedStars === clickedValue) ? 0 : clickedValue;

            filterStars.forEach(s => {
                const starValue = parseInt(s.getAttribute('data-value'));
                if (starValue <= selectedStars) {
                    s.classList.add('selected');
                } else {
                    s.classList.remove('selected');
                }
            });

            applyFilters();
        });
    });
</script>
